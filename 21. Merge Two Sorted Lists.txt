Des: 
	Input: list1 = 1->2->4, list2 = 1->3->4
	Output: 1->1->2->3->4->4
How: Đọc code, tương tự bài 2. nhưng dễ hơn
	
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummyHead = new ListNode(0);
        ListNode* curr = dummyHead;

        while (list1 != nullptr && list2 != nullptr) {
            if (list1->val <= list2->val) {
                curr->next = list1;
                list1 = list1->next;
            } else {
                curr->next = list2;
                list2 = list2->next;
            }
            curr = curr->next;
        }

	//không cần dùng while như các bài dạng mảng
	//chỉ cần nối tới thằng đầu trong đống còn lại, nó sẽ tự kéo theo những thằng đằng sau
        if (list1 != nullptr) {
            curr->next = list1;
        } else {
            curr->next = list2;
        }

        return dummyHead->next;
    }
};